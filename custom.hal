# Include your customized HAL commands here
# This file will not be overwritten when you run stepconf again

#group cnc => plc
net mag-pos-start motion.digital-out-00 => plc01.B26
net tool-unclamp motion.digital-out-01 => plc01.B27
net tool-mag-y-neg motion.digital-out-02 => plc01.B28
net tool-mag-y-pos motion.digital-out-03 => plc01.B29
net drill-bank-up motion.digital-out-04 => plc01.B30
net table-ab-enable motion.digital-out-05 => plc01.B31
net table-cd-enable motion.digital-out-06 => plc01.B32
net mag-open motion.digital-out-07 => plc01.B33


#group cnc <= plc
net plc-alrm		motion.digital-in-00 <= plc01.S2
net plc-busy		motion.digital-in-01 <= plc01.S3
net spindle-zero-spd	motion.digital-in-02 <= plc01.S5
net mag-ready-homed 	motion.digital-in-03 <= plc01.S11
net mag-on-pos 		motion.digital-in-04 <= plc01.S12
net spindle-unlocked 	motion.digital-in-05 <= plc01.S13
net drill-bank-down-pos	motion.digital-in-06 <= plc01.S14
net drill-bank-up-pos 	motion.digital-in-07 <= plc01.S15
net table-ab-ready 	motion.digital-in-08 <= plc01.S16
net table-cd-ready 	motion.digital-in-09 <= plc01.S17
net mag-opened 		motion.digital-in-10 <= plc01.S18
net mag-slide-on-pos 	motion.digital-in-11 <= plc01.S19
net mag-pos-start-stat	motion.digital-in-12 => plc01.S26
net tool-unclamp-stat	motion.digital-in-13 => plc01.S27
#data exchange
net tool-req-number motion.analog-out-00 => plc01.D201F

net tool-req-stat-number motion.analog-in-00 <= plc01.E201F
net curr-pocket-number motion.analog-in-01 <= plc01.E200F


#=======================MPG Config==========================
# Jog Pendant
# Jog Pendant
loadrt encoder num_chan=1
loadrt mux4 count=1
addf encoder.capture-position servo-thread
addf encoder.update-counters base-thread
addf mux4.0 servo-thread

# If your MPG outputs a quadrature signal per click set x4 to 1
# If your MPG puts out 1 pulse per click set x4 to 0
setp encoder.0.x4-mode 0

# For velocity mode, set to 1
# In velocity mode the axis stops when the dial is stopped
# even if that means the commanded motion is not completed,
# For position mode (the default), set to 0
# In position mode the axis will move exactly jog-scale
# units for each count, regardless of how long that might take,
setp axis.0.jog-vel-mode 0
setp axis.1.jog-vel-mode 0
setp axis.2.jog-vel-mode 0

# This sets the scale that will be used based on the input to the mux4
setp mux4.0.in0 0.1
setp mux4.0.in1 0.01
setp mux4.0.in2 0.001

# The inputs to the mux4 component
net scale1 mux4.0.sel0 <= plc01.S45
net scale2 mux4.0.sel1 <= plc01.S46

# The output from the mux4 is sent to each axis jog scale
net mpg-scale <= mux4.0.out
net mpg-scale => axis.0.jog-scale
net mpg-scale => axis.1.jog-scale
net mpg-scale => axis.2.jog-scale

# The MPG inputs
net mpg-a encoder.0.phase-A <= parport.1.pin-10-in
net mpg-b encoder.0.phase-B <= parport.1.pin-11-in

# The Axis select inputs
net mpg-x axis.0.jog-enable <= plc01.S40
net mpg-y axis.1.jog-enable <= plc01.S41
net mpg-z axis.2.jog-enable <= plc01.S42

# The encoder output counts to the axis. Only the selected axis will move.
net encoder-counts  <= encoder.0.counts
net encoder-counts => axis.0.jog-counts
net encoder-counts => axis.1.jog-counts
net encoder-counts => axis.2.jog-counts